# test misc. dot op, call and key op combinations

# 'fcn'
class C{ def fcn(){ print( "fcn" ); } }
c = new C();
a = { "b" : { "c" : c } };
a.b.c.fcn();

# 0, 1
m = {"e" : 0, "g" : 1};
def fcn(){ return m; }
f = fcn;
a = { "b" : { "c" : [{"d":f}] } };
print( a.b.c[0].d().e );
a.b.c[0].d().e = a.b.c[0].d().g;
print( a.b.c[0].d().e );

## 0, 2
m = {"e" : 0, "g" : 2};
def fcn(){ return m; }
f = fcn;
a = { "b" : { "c" : [{"d":f}] } };
print( a.b.c[0].d().e );
a.b.c[0].d().e = fcn().g;
print( a.b.c[0].d().e );

# 0, 3
m = {"e" : 0, "g" : 3};
def fcn(){ return m; }
f = fcn;
a = { "b" : { "c" : [{"d":f}] } };
print( a.b.c[0].d().e );
a.b.c[0].d().e = m.g;
print( a.b.c[0].d().e );

# 0, 4 
m = {"e" : 0};
def fcn(){ return m; }
f = fcn;
a = { "b" : { "c" : [{"d":f}] } };
print( a.b.c[0].d().e );
a.b.c[0].d().e = 4;
print( a.b.c[0].d().e );

# 0, 5
m = {"e" : 0};
def fcn(){ return {"d" : [m] }; }
f = fcn;
a = { "b" : { "c" : f } };
print( a.b.c().d[0].e );
a.b.c().d[0].e = 5;
print( a.b.c().d[0].e );

# 256, 1
class A
{
	def new()
	{
		self.i = 255;
	}
	def one()
	{
		return self;
	}
}
a = new A();
a.one().i += 1;
print( a.i );
a.one().i = 1;
print( a.i );

# [{"i":32}]
m = { "i" : 1 };
a = [m];
a[0].i = 32;
print( a );

