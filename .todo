<?xml version="1.0" ?>
<todo version="0.1.20">	
		<note done="1252965849" priority="veryhigh" time="1252903036">		
			semantic checking
				<note done="1252965684" priority="veryhigh" time="1252903146">			
					func_decl: set id symbol type to function
						<comment>				
							no can do, must be done at run-time, not in semantic checking
						</comment>			
				</note>		
				<note done="1252965709" priority="veryhigh" time="1252903167">			
					const_decl: set id symbol type to const
						<comment>				
							no can do, must be done at run-time, not in semantic checking. did emit warning on re-def'ing a variable as const
						</comment>			
				</note>		
				<note done="1252904955" priority="veryhigh" time="1252903280">			
					for_s: loop variables need to be injected into a new scope, which is the parent of the loop (statement|compound_statement) 
						<comment>				
							done in grammar, not semantics
						</comment>			
				</note>		
				<note done="1252904971" priority="veryhigh" time="1252903330">			
					arg_list_decl: arguments need to be injected into a new scope, which is the parent of the function body (statement|compound_statement)
					<comment>				
						done in grammar, not semantics
					</comment>			
				</note>		
		</note>	
		<note done="1254025727" priority="veryhigh" time="1252903578">		
			intermediate language: need to define the IL code, which will transform to virtual machine code
		</note>	
		<note done="1254025738" priority="veryhigh" time="1252903640">		
			Virtual Machine: need to define the VM and opcodes. 
stack based, all ops pull arguments off stack
		</note>	
		<note done="1255025028" priority="veryhigh" time="1254025793">		
			map and vector handling, including dot op and for loop
		</note>	
		<note done="1252906732" priority="high" time="1252904662">		
			make vim syntax file for deva files
			<comment>			
				based off awk.vim. needs some work, but functional
			</comment>		
		</note>	
		<note done="1252979519" priority="high" time="1252904695">		
			add deva file support to my .vimrc (set cindent etc) OR filetype plugin to do this??
		</note>	
		<note done="1254025745" priority="high" time="1253124087">		
			make dot operator chainable (e.g. a.b.c)
		</note>	
		<note priority="veryhigh" time="1254025776">		
			complete execution engine code and deva executable
		</note>	
		<note priority="veryhigh" time="1254868797">		
			objects/user-defined types (fields, method look-up, 'class' keyword etc)
		</note>	
		<note done="1255753655" priority="veryhigh" time="1255048474">		
			fix the data/object/ref-counting model
			<comment>			
				runtime scope/symbol tbl object needs to track pointers.
need ref-count and add-ref/release-ref operations on DevaObject class.
			</comment>		
		</note>	
		<note done="1255656185" priority="veryhigh" time="1255237872">		
			get bsort.dv working (bubble sort)
		</note>	
		<note priority="high" time="1252905837">		
			accept hex numbers (and octal and binary??)
		</note>	
		<note priority="high" time="1254444594">		
			vector and string slicing (ala python)
		</note>	
		<note done="1255582640" priority="high" time="1255048474">		
			tests 6,7,22 fail on mac os x. the jmp/fcn/return offsets are all different, presumably because of the sizeof a long
		</note>	
		<note done="1255839736" priority="high" time="1255237571">		
			remove Redefining symbol warning?
		<comment>done. left code commented out with a comment asking if it could be put to some use, bue any sense... maybe only for vector/map new's and const definitions?
</comment></note>	
		<note done="1255632626" priority="veryhigh" time="1255582612">		
			something with debug-info messes up back-patching of fcns. compile and run test11.dv for repro.
		</note>	
		<note done="1255726500" priority="veryhigh" time="1255670572">		
			debugging info causes BAD CODE GEN. compile test 16 with debug info and run for repro case.
		</note>	
		<note done="1255846484" priority="high" time="1255807306">		
			print() builtin doesn't handle escape sequences ('\t', '\n' etc)
		<comment>actually the compiler wasn't 'unescaping' the strings
</comment></note>	
		<note done="1255839681" priority="veryhigh" time="1255807935">		
			testing...
		<comment>delete me
</comment></note>	
<note done="1255839706" priority="veryhigh" time="1255814228">add 'copy' built-in function to create copies of vectors and maps
<comment>
</comment></note><note priority="high" time="1255839820">make 'const' work
</note><note priority="veryhigh" time="1255846573">modules and 'import' keyword
</note></todo>