# built-in module 're' (regular expression) tests
import _re;

regexp = _re.compile( "(\w+)\W+(\w+)" );
s = "@abc def--";
matches = _re.search( regexp, s );
print( matches );
i = 0;
if( matches )
	for( m in matches )
	{
		print( m.start, ":" );
		print( m.end );
		print( "match " + str( i ) + ": ", "" );
		print( s[m.start:m.end] );
		print( m.str );
		i += 1;
	}

_re.delete( regexp );

card_regexp = "\\A(\\d{3,4})[- ]?(\\d{4})[- ]?(\\d{4})[- ]?(\\d{4})\\z";
regexp = _re.compile( card_regexp );
machine_format = "\\1\\2\\3\\4";
human_format = "\\1-\\2-\\3-\\4";
card_num = "4444-0000-1111-2222";
human_readable_card_num = _re.replace( regexp, card_num, machine_format );
print( human_readable_card_num );
machine_readable_card_num = _re.replace( regexp, human_readable_card_num, human_format );
print( machine_readable_card_num );
_re.delete( regexp );

# test the module regex and class regex it contains
import re;

{
    regexp = new re.re( "(\w+)\W+(\w+)" );
    s = "@abc def--";
    matches = regexp.search( s );
    print( matches );
    i = 0;
    if( matches )
        for( m in matches )
        {
            print( m.start, ":" );
            print( m.end );
            print( "match " + str( i ) + ": ", "" );
            print( s[m.start:m.end] );
            print( m.str );
            i += 1;
        }
}

{
    card_regexp = "\\A(\\d{3,4})[- ]?(\\d{4})[- ]?(\\d{4})[- ]?(\\d{4})\\z";
    regexp = new re.re( card_regexp );
    machine_format = "\\1\\2\\3\\4";
    human_format = "\\1-\\2-\\3-\\4";
    card_num = "4444-0000-1111-2222";
    human_readable_card_num = regexp.replace( card_num, machine_format );
    print( human_readable_card_num );
    machine_readable_card_num = regexp.replace( human_readable_card_num, human_format );
    print( machine_readable_card_num );
}

